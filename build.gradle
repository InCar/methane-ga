allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    version = '1.0'

    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        maven { url "${mavenRepoUrl}" }
        jcenter()
    }
    dependencies {
        //springboot web支持
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        compile group: 'org.apache.kafka', name: 'kafka-clients', version: '0.9.0.1'
        // https://mvnrepository.com/artifact/io.grpc/grpc-all
        compile group: 'io.grpc', name: 'grpc-all', version: '1.26.0'
        //json
        compile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
        compile("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
        compile("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
        testCompile group: 'junit', name: 'junit', version: '4.+'
    }

}
bootRun {
    /**
     * 启动时候带入jvm的参数;如下(启动jvisualvm监控)
     * nohup gradle bootRun -PjvmArgs="-Djava.rmi.server.hostname=172.16.24.36 -Dcom.sun.management.jmxremote.port=10001 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=true" &
     */
    if (project.hasProperty('jvmArgs')) {
        jvmArgs = (project.jvmArgs.split("\\s+") as List)
    }
}

buildscript {
    ext {
        springBootVersion='2.1.4.RELEASE'
        kafkaVersion='+'
        jacksonVersion='+'
        mavenRepoUrl = 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    repositories {
        mavenLocal()
        maven { url "${mavenRepoUrl}" }
        jcenter()
    }
    dependencies {
        //使用springboot框架
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}